OpenShift Container Platform 4.16
a. Installer-provisioned Infrastructure
  - The IPI installation provides a turn-key solution and includes all the necessary infrastructure services within the Red Hat OpenShift cluster. 
  - You can provide some existing infrastructure to the cluster, but the installation program deploys all of the machines that your cluster initially needs.
b. User-provisioned Infrastructure
  - UPI allows users to provision their infrastructure pieces and deploy OpenShift on top of them.
  - Highly customizable and tunable. 
c  Assisted Installer
  -ISO discovery to identify the infrastructure set up by the user to deploy the cluster.
![screenshot](Openshift/Installation Process.PNG)

Assisted Installer
https://www.youtube.com/watch?v=Y-7_U-C49wk



OKD- Single Node
https://hackmd.io/tDnHM2BoQru0VgqMGI_Q5g


[core@node101 ~]$ sudo nslookup 192.168.10.101
101.10.168.192.in-addr.arpa	name = api-int.snokd10.internal.net.
101.10.168.192.in-addr.arpa	name = api.snokd10.internal.net.
101.10.168.192.in-addr.arpa	name = node101.snokd10.internal.net.


https://upstreamwithoutapaddle.com/


About OKD installation
The OKD installation program offers four methods for deploying a cluster which are detailed in the following list:

Interactive: You can deploy a cluster with the web-based Assisted Installer. This is an ideal approach for clusters with networks connected to the internet. The Assisted Installer is the easiest way to install OKD, it provides smart defaults, and it performs pre-flight validations before installing the cluster. It also provides a RESTful API for automation and advanced configuration scenarios.

Local Agent-based: You can deploy a cluster locally with the Agent-based Installer for disconnected environments or restricted networks. It provides many of the benefits of the Assisted Installer, but you must download and configure the Agent-based Installer first. Configuration is done with a command-line interface. This approach is ideal for disconnected environments.

Automated: You can deploy a cluster on installer-provisioned infrastructure. The installation program uses each cluster hostâ€™s baseboard management controller (BMC) for provisioning. You can deploy clusters in connected or disconnected environments.

Full control: You can deploy a cluster on infrastructure that you prepare and maintain, which provides maximum customizability. You can deploy clusters in connected or disconnected environments.

bootstrap
control plane
compute machines
                                -> Bootstrap Node
install-config.yaml -> ignition -> Compute Node
                                -> worker Node
In OKD 4.16, the installation program is a Go binary file that performs a series of file transformations on a set of assets. The way you interact with the installation program differs depending on your installation type. Consider the following installation use cases:

To deploy a cluster with the Assisted Installer, you must configure the cluster settings by using the Assisted Installer. There is no installation program to download and configure. After you finish setting the cluster configuration, you download a discovery ISO and then boot cluster machines with that image. You can install clusters with the Assisted Installer on Nutanix, vSphere, and bare metal with full integration, and other platforms without integration. If you install on bare metal, you must provide all of the cluster infrastructure and resources, including the networking, load balancing, storage, and individual cluster machines.

To deploy clusters with the Agent-based Installer, you can download the Agent-based Installer first. You can then configure the cluster and generate a discovery image. You boot cluster machines with the discovery image, which installs an agent that communicates with the installation program and handles the provisioning for you instead of you interacting with the installation program or setting up a provisioner machine yourself. You must provide all of the cluster infrastructure and resources, including the networking, load balancing, storage, and individual cluster machines. This approach is ideal for disconnected environments.

For clusters with installer-provisioned infrastructure, you delegate the infrastructure bootstrapping and provisioning to the installation program instead of doing it yourself. The installation program creates all of the networking, machines, and operating systems that are required to support the cluster, except if you install on bare metal. If you install on bare metal, you must provide all of the cluster infrastructure and resources, including the bootstrap machine, networking, load balancing, storage, and individual cluster machines.

If you provision and manage the infrastructure for your cluster, you must provide all of the cluster infrastructure and resources, including the bootstrap machine, networking, load balancing, storage, and individual cluster machines.


For the installation program, the program uses three sets of files during installation: 
  - An installation configuration file that is named install-config.yaml
  - Kubernetes manifests
  - Ignition config files for your machine types

The installation configuration file is transformed into Kubernetes manifests, and then the manifests are wrapped into Ignition config files. The installation program uses these Ignition config files to create the cluster.
The installation configuration files are all pruned when you run the installation program, so be sure to back up all the configuration files that you want to use again.
